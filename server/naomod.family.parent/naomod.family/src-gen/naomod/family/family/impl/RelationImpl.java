/**
 * generated by Xtext 2.24.0
 */
package naomod.family.family.impl;

import naomod.family.family.FamilyPackage;
import naomod.family.family.Person;
import naomod.family.family.Relation;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Relation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link naomod.family.family.impl.RelationImpl#getPerson <em>Person</em>}</li>
 *   <li>{@link naomod.family.family.impl.RelationImpl#getParentOne <em>Parent One</em>}</li>
 *   <li>{@link naomod.family.family.impl.RelationImpl#getParentTwo <em>Parent Two</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RelationImpl extends MinimalEObjectImpl.Container implements Relation
{
  /**
   * The cached value of the '{@link #getPerson() <em>Person</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPerson()
   * @generated
   * @ordered
   */
  protected Person person;

  /**
   * The cached value of the '{@link #getParentOne() <em>Parent One</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParentOne()
   * @generated
   * @ordered
   */
  protected Person parentOne;

  /**
   * The cached value of the '{@link #getParentTwo() <em>Parent Two</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParentTwo()
   * @generated
   * @ordered
   */
  protected Person parentTwo;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RelationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FamilyPackage.Literals.RELATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Person getPerson()
  {
    if (person != null && person.eIsProxy())
    {
      InternalEObject oldPerson = (InternalEObject)person;
      person = (Person)eResolveProxy(oldPerson);
      if (person != oldPerson)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FamilyPackage.RELATION__PERSON, oldPerson, person));
      }
    }
    return person;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Person basicGetPerson()
  {
    return person;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPerson(Person newPerson)
  {
    Person oldPerson = person;
    person = newPerson;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FamilyPackage.RELATION__PERSON, oldPerson, person));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Person getParentOne()
  {
    if (parentOne != null && parentOne.eIsProxy())
    {
      InternalEObject oldParentOne = (InternalEObject)parentOne;
      parentOne = (Person)eResolveProxy(oldParentOne);
      if (parentOne != oldParentOne)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FamilyPackage.RELATION__PARENT_ONE, oldParentOne, parentOne));
      }
    }
    return parentOne;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Person basicGetParentOne()
  {
    return parentOne;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParentOne(Person newParentOne)
  {
    Person oldParentOne = parentOne;
    parentOne = newParentOne;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FamilyPackage.RELATION__PARENT_ONE, oldParentOne, parentOne));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Person getParentTwo()
  {
    if (parentTwo != null && parentTwo.eIsProxy())
    {
      InternalEObject oldParentTwo = (InternalEObject)parentTwo;
      parentTwo = (Person)eResolveProxy(oldParentTwo);
      if (parentTwo != oldParentTwo)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FamilyPackage.RELATION__PARENT_TWO, oldParentTwo, parentTwo));
      }
    }
    return parentTwo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Person basicGetParentTwo()
  {
    return parentTwo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParentTwo(Person newParentTwo)
  {
    Person oldParentTwo = parentTwo;
    parentTwo = newParentTwo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FamilyPackage.RELATION__PARENT_TWO, oldParentTwo, parentTwo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FamilyPackage.RELATION__PERSON:
        if (resolve) return getPerson();
        return basicGetPerson();
      case FamilyPackage.RELATION__PARENT_ONE:
        if (resolve) return getParentOne();
        return basicGetParentOne();
      case FamilyPackage.RELATION__PARENT_TWO:
        if (resolve) return getParentTwo();
        return basicGetParentTwo();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FamilyPackage.RELATION__PERSON:
        setPerson((Person)newValue);
        return;
      case FamilyPackage.RELATION__PARENT_ONE:
        setParentOne((Person)newValue);
        return;
      case FamilyPackage.RELATION__PARENT_TWO:
        setParentTwo((Person)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FamilyPackage.RELATION__PERSON:
        setPerson((Person)null);
        return;
      case FamilyPackage.RELATION__PARENT_ONE:
        setParentOne((Person)null);
        return;
      case FamilyPackage.RELATION__PARENT_TWO:
        setParentTwo((Person)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FamilyPackage.RELATION__PERSON:
        return person != null;
      case FamilyPackage.RELATION__PARENT_ONE:
        return parentOne != null;
      case FamilyPackage.RELATION__PARENT_TWO:
        return parentTwo != null;
    }
    return super.eIsSet(featureID);
  }

} //RelationImpl
